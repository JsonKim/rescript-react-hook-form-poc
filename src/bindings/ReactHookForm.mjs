// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactHookForm from "react-hook-form";

function modifyRecord(origin, name, value){
  return { ...origin, [name]: value }
}
;

function zipObj(keys, values) {
  const length = Math.min(keys.length, values.length);
  const ret = {};
  for (let i = 0; i < length; i++) {
    ret[keys[i]] = values[i];
  }

  return ret;
}
;

var Control = {};

var $$Error = {};

var Register = {};

function Form(FieldValues) {
  var use = function (config) {
    var r = ReactHookForm.useForm(Caml_option.some(config), undefined);
    var register = function (path) {
      return r.register(Curry._1(FieldValues.path_keyToString, path));
    };
    var modify = function (f) {
      return function (names) {
        var keys = Belt_Array.map(names, FieldValues.path_keyToString);
        var values = f(keys);
        return zipObj(keys, values);
      };
    };
    return modifyRecord(modifyRecord(modifyRecord(r, "register", register), "getValues", modify(r.getValues)), "watch", modify(r.watch));
  };
  return {
          use: use
        };
}

var WatchValues = {};

export {
  Control ,
  $$Error ,
  Register ,
  Form ,
  WatchValues ,
  
}
/*  Not a pure module */
